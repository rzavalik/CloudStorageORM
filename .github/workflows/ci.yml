name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - feature/**
      - bug/**
      - hotfix/**
      
permissions:
  checks: write
  pull-requests: write
  contents: read
  
jobs:
  build-and-test:
    name: Build, Test, and Coverage
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Install dependencies
      run: dotnet restore CloudStorageORM.sln

    - name: Build
      run: dotnet build CloudStorageORM.sln --no-restore --configuration Release --verbosity normal

    - name: Run Azurite Emulator
      run: |
        docker run -d -p 10000:10000 -p 10001:10001 -p 10002:10002 --name azurite mcr.microsoft.com/azure-storage/azurite

    - name: Wait for Azurite to be ready
      run: sleep 5

    - name: Run Unit Tests - All Unit Tests
      run: |
          mkdir -p TestResults/Coverage
          for proj in $(find . -type f -iname "*.Tests.csproj"); do
            name=$(basename "$proj" .csproj)
            dotnet test "$proj" --configuration Release \
              --logger "trx;LogFileName=${name}.trx" \
              --collect:"XPlat Code Coverage"
          done
          find . -name "*.trx" -exec cp {} TestResults/ \;
          find . -type f -name "coverage.cobertura.xml" | while read file; do
            cp "$file" TestResults/Coverage/$(basename $(dirname "$file")).xml
          done

    - name: Upload TRX Test Results
      uses: actions/upload-artifact@v4
      with:
        name: Test Results (.trx files)
        path: TestResults/*.trx

    - name: Publish Test Report as PR Comment
      uses: dorny/test-reporter@v1
      if: github.event_name == 'pull_request' && always()
      with:
        name: Tests Report
        path: TestResults/*.trx
        reporter: dotnet-trx

    - name: Publish Test Results to GitHub Actions UI
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: TestResults/*.trx

    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: TestResults/Coverage/*.xml

    - name: Publish Coverage to GitHub Summary
      uses: 5monkeys/cobertura-action@v13
      with:
        path: TestResults/Coverage/*.xml
        minimum_coverage: 0

    - name: Cleanup Azurite Container
      if: always()
      run: docker rm -f azurite || true
